
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	//++Горячева 14.08.2025 Добавление Реквизита
	
	РодительскаяГруппа = Элементы.ГруппаШапкаПраво;

	ПолеВвода = Элементы.Добавить("ЭлементКонтактноеЛицо", Тип("ПолеФормы"), РодительскаяГруппа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.КонтактноеЛицо";
	ПолеВвода.УстановитьДействие("ПриИзменении", "ПриИзмененииКонтактногоЛица");
	ПолеВвода.УстановитьДействие("ОбработкаВыбора", "ПриВыбореКонтактногоЛица");
	
	РодительскаяГруппаСкидка = Элементы.Группа1;
	
	ПолеСкидки = Элементы.Добавить("ЭлементСогласованнаяСкидка", Тип("ПолеФормы"), РодительскаяГруппаСкидка);
	ПолеСкидки.ПутьКДанным = "Объект.СогласованнаяСкидка";
	ПолеСкидки.Вид = ВидПоляФормы.ПолеВвода;
	ПолеСкидки.УстановитьДействие("ПриИзменении","ПриИзмененииСогласованнойСкидки");
	
	//--Горячева 14.08.2025 Добавление Реквизита
	
	//++Горячева 14.08.2025 Добавление Команды 
	
	Команда = Команды.Добавить("ПересчитатьТаблицу");
	Команда.Заголовок = "Пересчитать Таблицу";
	Команда.Действие = "КомандаПересчитатьТаблицу";
	
	КнопкаФормы = Элементы.Добавить("КомандаПересчитатьТаблицу", Тип("КнопкаФормы"), РодительскаяГруппаСкидка);
	КнопкаФормы.ИмяКоманды = "ПересчитатьТаблицу";
	КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	КнопкаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
	Команда.Картинка = БиблиотекаКартинок.Обновить;
	
	//--Горячева 14.08.2025 Добавление Команды
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриИзмененииСогласованнойСкидки(Элемент)
	
	//++Горячева 14.08.2025 Добавление Команды 

	ТаблицаЗаполнена = Ложь;
	
	Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0 Тогда
		ТаблицаЗаполнена = Истина;
	КонецЕсли;
	
	Если Не ТаблицаЗаполнена Тогда
		Возврат;
	КонецЕсли;
	
	Вопрос = ВопросАсинх("Изменен процент скидки. Пересчитать таблицы товаров и услуг?", РежимДиалогаВопрос.ДаНет);
	Ответ = Ждать Вопрос;
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ПересчитатьСтрокиТаблицы();
	
	//--Горячева 14.08.2025 Добавление Команды 

КонецПроцедуры


&НаКлиенте
Процедура КомандаПересчитатьТаблицу(Команда)
	
	//++Горячева 14.08.2025 Добавление Команды
	ПересчитатьСтрокиТаблицы();
	//--Горячева 14.08.2025 Добавление Команды
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСтрокиТаблицы()
	
	//++Горячева 14.08.2025 Добавление Команды	
	Для Каждого ТекСтрока Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(ТекСтрока);
	КонецЦикла;
	
	Для Каждого ТекСтрока Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(ТекСтрока);
	КонецЦикла;
	//--Горячева 14.08.2025 Добавление Команды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
 	
	//РассчитатьСуммуДокумента();
	
	//++Горячева 14.08.2025 Доработка
	СкидкаВШапке = Объект.СогласованнаяСкидка;
	СкидкаВСтроке = ТекущиеДанные.Скидка;
	ОбщаяСкидка = СкидкаВСтроке + СкидкаВШапке;
	
	Если ОбщаяСкидка > 100 Тогда
		ТекстСообщения = СтрШаблон("Суммарная скидка по номенклатуре - %1, составила %2 процентов, что превышает максимальную скидку. До выяснения верных данных, сумма по строке установлена 0.", ТекущиеДанные.Номенклатура, ОбщаяСкидка); 
		Сообщить(ТекстСообщения);
		ТекущиеДанные.Сумма = 0;
	Иначе 
		ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена * (100 - ОбщаяСкидка) /  100;
	КонецЕсли;	
	//--Горячева 14.08.2025 Доработка
	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
